// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: QueryMasterClientProtocol.proto

package org.apache.tajo.ipc;

public final class QueryMasterClientProtocol {
  private QueryMasterClientProtocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf service {@code QueryMasterClientProtocolService}
   */
  public static abstract class QueryMasterClientProtocolService
      implements com.google.protobuf.Service {
    protected QueryMasterClientProtocolService() {}

    public interface Interface {
      /**
       * <code>rpc updateSessionVariables(.UpdateSessionVariableRequest) returns (.BoolProto);</code>
       */
      public abstract void updateSessionVariables(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto> done);

      /**
       * <code>rpc getQueryResult(.GetQueryResultRequest) returns (.GetQueryResultResponse);</code>
       */
      public abstract void getQueryResult(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse> done);

      /**
       * <code>rpc getQueryStatus(.GetQueryStatusRequest) returns (.GetQueryStatusResponse);</code>
       */
      public abstract void getQueryStatus(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse> done);

      /**
       * <code>rpc closeQuery(.QueryIdProto) returns (.BoolProto);</code>
       */
      public abstract void closeQuery(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.TajoIdProtos.QueryIdProto request,
          com.google.protobuf.RpcCallback<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new QueryMasterClientProtocolService() {
        @java.lang.Override
        public  void updateSessionVariables(
            com.google.protobuf.RpcController controller,
            org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest request,
            com.google.protobuf.RpcCallback<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto> done) {
          impl.updateSessionVariables(controller, request, done);
        }

        @java.lang.Override
        public  void getQueryResult(
            com.google.protobuf.RpcController controller,
            org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest request,
            com.google.protobuf.RpcCallback<org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse> done) {
          impl.getQueryResult(controller, request, done);
        }

        @java.lang.Override
        public  void getQueryStatus(
            com.google.protobuf.RpcController controller,
            org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest request,
            com.google.protobuf.RpcCallback<org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse> done) {
          impl.getQueryStatus(controller, request, done);
        }

        @java.lang.Override
        public  void closeQuery(
            com.google.protobuf.RpcController controller,
            org.apache.tajo.TajoIdProtos.QueryIdProto request,
            com.google.protobuf.RpcCallback<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto> done) {
          impl.closeQuery(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.updateSessionVariables(controller, (org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest)request);
            case 1:
              return impl.getQueryResult(controller, (org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest)request);
            case 2:
              return impl.getQueryStatus(controller, (org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest)request);
            case 3:
              return impl.closeQuery(controller, (org.apache.tajo.TajoIdProtos.QueryIdProto)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest.getDefaultInstance();
            case 1:
              return org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest.getDefaultInstance();
            case 2:
              return org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest.getDefaultInstance();
            case 3:
              return org.apache.tajo.TajoIdProtos.QueryIdProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance();
            case 1:
              return org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse.getDefaultInstance();
            case 2:
              return org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse.getDefaultInstance();
            case 3:
              return org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc updateSessionVariables(.UpdateSessionVariableRequest) returns (.BoolProto);</code>
     */
    public abstract void updateSessionVariables(
        com.google.protobuf.RpcController controller,
        org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest request,
        com.google.protobuf.RpcCallback<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto> done);

    /**
     * <code>rpc getQueryResult(.GetQueryResultRequest) returns (.GetQueryResultResponse);</code>
     */
    public abstract void getQueryResult(
        com.google.protobuf.RpcController controller,
        org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest request,
        com.google.protobuf.RpcCallback<org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse> done);

    /**
     * <code>rpc getQueryStatus(.GetQueryStatusRequest) returns (.GetQueryStatusResponse);</code>
     */
    public abstract void getQueryStatus(
        com.google.protobuf.RpcController controller,
        org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest request,
        com.google.protobuf.RpcCallback<org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse> done);

    /**
     * <code>rpc closeQuery(.QueryIdProto) returns (.BoolProto);</code>
     */
    public abstract void closeQuery(
        com.google.protobuf.RpcController controller,
        org.apache.tajo.TajoIdProtos.QueryIdProto request,
        com.google.protobuf.RpcCallback<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.apache.tajo.ipc.QueryMasterClientProtocol.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.updateSessionVariables(controller, (org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest)request,
            com.google.protobuf.RpcUtil.<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto>specializeCallback(
              done));
          return;
        case 1:
          this.getQueryResult(controller, (org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest)request,
            com.google.protobuf.RpcUtil.<org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse>specializeCallback(
              done));
          return;
        case 2:
          this.getQueryStatus(controller, (org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest)request,
            com.google.protobuf.RpcUtil.<org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse>specializeCallback(
              done));
          return;
        case 3:
          this.closeQuery(controller, (org.apache.tajo.TajoIdProtos.QueryIdProto)request,
            com.google.protobuf.RpcUtil.<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest.getDefaultInstance();
        case 1:
          return org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest.getDefaultInstance();
        case 2:
          return org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest.getDefaultInstance();
        case 3:
          return org.apache.tajo.TajoIdProtos.QueryIdProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance();
        case 1:
          return org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse.getDefaultInstance();
        case 2:
          return org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse.getDefaultInstance();
        case 3:
          return org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.apache.tajo.ipc.QueryMasterClientProtocol.QueryMasterClientProtocolService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void updateSessionVariables(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.class,
            org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance()));
      }

      public  void getQueryResult(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse.class,
            org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse.getDefaultInstance()));
      }

      public  void getQueryStatus(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest request,
          com.google.protobuf.RpcCallback<org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse.class,
            org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse.getDefaultInstance()));
      }

      public  void closeQuery(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.TajoIdProtos.QueryIdProto request,
          com.google.protobuf.RpcCallback<org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.class,
            org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto updateSessionVariables(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest request)
          throws com.google.protobuf.ServiceException;

      public org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse getQueryResult(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest request)
          throws com.google.protobuf.ServiceException;

      public org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse getQueryStatus(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest request)
          throws com.google.protobuf.ServiceException;

      public org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto closeQuery(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.TajoIdProtos.QueryIdProto request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto updateSessionVariables(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.UpdateSessionVariableRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance());
      }


      public org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse getQueryResult(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.GetQueryResultRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.apache.tajo.ipc.ClientProtos.GetQueryResultResponse.getDefaultInstance());
      }


      public org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse getQueryStatus(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.ipc.ClientProtos.GetQueryStatusRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.apache.tajo.ipc.ClientProtos.GetQueryStatusResponse.getDefaultInstance());
      }


      public org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto closeQuery(
          com.google.protobuf.RpcController controller,
          org.apache.tajo.TajoIdProtos.QueryIdProto request)
          throws com.google.protobuf.ServiceException {
        return (org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.BoolProto.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:QueryMasterClientProtocolService)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037QueryMasterClientProtocol.proto\032\021tajo_" +
      "protos.proto\032\022TajoIdProtos.proto\032\023Catalo" +
      "gProtos.proto\032\025PrimitiveProtos.proto\032\022Cl" +
      "ientProtos.proto2\226\002\n QueryMasterClientPr" +
      "otocolService\022C\n\026updateSessionVariables\022" +
      "\035.UpdateSessionVariableRequest\032\n.BoolPro" +
      "to\022A\n\016getQueryResult\022\026.GetQueryResultReq" +
      "uest\032\027.GetQueryResultResponse\022A\n\016getQuer" +
      "yStatus\022\026.GetQueryStatusRequest\032\027.GetQue" +
      "ryStatusResponse\022\'\n\ncloseQuery\022\r.QueryId",
      "Proto\032\n.BoolProtoB6\n\023org.apache.tajo.ipc" +
      "B\031QueryMasterClientProtocol\210\001\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.tajo.TajoProtos.getDescriptor(),
          org.apache.tajo.TajoIdProtos.getDescriptor(),
          org.apache.tajo.catalog.proto.CatalogProtos.getDescriptor(),
          org.apache.tajo.rpc.protocolrecords.PrimitiveProtos.getDescriptor(),
          org.apache.tajo.ipc.ClientProtos.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
