#!/usr/bin/env bash

# The Tajo command script
#
# Environment Variables
#
#   JAVA_HOME        The java implementation to use.  Overrides JAVA_HOME.
#
#   TAJO_PROXY_HEAPSIZE   The maximum amount of heap to use, in MB.
#                         Default is 1000.
#
#   TAJO_PROXY_OPTS      Extra Java runtime options.
#
#   TAJO_PROXY_ROOT_LOGGER The root appender. Default is INFO,consoles
#

bin=`dirname "$0"`
bin=`cd "$bin"; pwd`

. "$bin"/tajo-proxy-config.sh

cygwin=false
case "`uname`" in
CYGWIN*) cygwin=true;;
esac

# if no args specified, show usage
if [ $# = 0 ]; then
  echo "Usage: tajo [--config confdir] COMMAND"
  echo "where COMMAND is one of:"
  echo "  proxy                run the Proxy Server"
  echo "  proxy-shell          run the Proxy Shell"
  echo "  cli                  run the Proxy CLI"
  echo "  user                 run the Proxy UserManager"
  echo " or"
  echo "  CLASSNAME            run the class named CLASSNAME"
  echo "Most commands print help when invoked w/o parameters."
  exit 1
fi

# get arguments
COMMAND=$1
shift

if [ -f "${TAJO_PROXY_CONF_DIR}/tajo-proxy-env.sh" ]; then
  . "${TAJO_PROXY_CONF_DIR}/tajo-proxy-env.sh"
fi

# some Java parameters
if [ "$JAVA_HOME" != "" ]; then
  #echo "run java in $JAVA_HOME"
  JAVA_HOME=$JAVA_HOME
fi
  
if [ "$JAVA_HOME" = "" ]; then
  echo "Error: JAVA_HOME is not set."
  exit 1
fi

JAVA=$JAVA_HOME/bin/java
JAVA_TAJO_PROXY_HEAP_MAX=-Xmx1000m

# check envvars which might override default args
if [ "$TAJO_PROXY_HEAPSIZE" != "" ]; then
  JAVA_TAJO_PROXY_HEAP_MAX="-Xmx""$TAJO_PROXY_HEAPSIZE""m"
fi

##############################################################################
# Find and Set Tajo-proxy CLASSPATH
##############################################################################

HDFS_LIBRARY_PATH="${HADOOP_HOME}/lib/native/"

if [ "x$JAVA_LIBRARY_PATH" != "x" ]; then
    JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:${HDFS_LIBRARY_PATH}
  else
    JAVA_LIBRARY_PATH=${HDFS_LIBRARY_PATH}
fi

# Add java common jars to TAJO_PROXY_BASE_CLASSPATH
TAJO_PROXY_BASE_CLASSPATH="${JAVA_HOME}/lib/tools.jar"

# add user-specified CLASSPATH firstly
if [ "$TAJO_PROXY_USER_CLASSPATH_FIRST" != "" ] && [ "$TAJO_PROXY_CLASSPATH" != "" ] ; then
  TAJO_PROXY_BASE_CLASSPATH=${TAJO_PROXY_BASE_CLASSPATH}:${TAJO_PROXY_CLASSPATH}
fi

# for developers, add Tajo classes to TAJO_BASE_CLASSPATH
if [ -d "$TAJO_PROXY_HOME/target/classes" ]; then
  TAJO_PROXY_BASE_CLASSPATH=${TAJO_PROXY_BASE_CLASSPATH}:$TAJO_PROXY_HOME/target/classes
fi
if [ -d "$TAJO_PROXY_HOME/target/test/classes" ]; then
  TAJO_PROXY_BASE_CLASSPATH=${TAJO_PROXY_BASE_CLASSPATH}:$TAJO_PROXY_HOME/target/test/classes
fi

# so that filenames w/ spaces are handled correctly in loops below
IFS=$'\n'

# TAJO_PROXY_BASE_CLASSPATH contains $TAJO_PROXY_CONF_DIR before containing jars.
TAJO_PROXY_BASE_CLASSPATH="${TAJO_PROXY_CONF_DIR}"

# Tajo Jar Directory
TAJO_PROXY_JAR_DIRS="$TAJO_PROXY_HOME
${TAJO_PROXY_HOME}/lib"

for d in $TAJO_PROXY_JAR_DIRS; do
  for j in `find $d/*.jar ! -name "*test*"`; do
    TAJO_PROXY_BASE_CLASSPATH=$TAJO_PROXY_BASE_CLASSPATH:$j
  done
done

# add user-specified CLASSPATH last
if [ "$TAJO_PROXY_USER_CLASSPATH_FIRST" = "" ] && [ "$TAJO_PROXY_CLASSPATH" != "" ]; then
  ${TAJO_PROXY_BASE_CLASSPATH}=${CLASSPATH}:${TAJO_PROXY_CLASSPATH}
fi

export TAJO_PROXY_BASE_CLASSPATH

CLASSPATH="${CLASSPATH}:${TAJO_PROXY_BASE_CLASSPATH}"

# restore ordinary behaviour
unset IFS

# default log directory & file
if [ "$TAJO_PROXY_LOG_DIR" = "" ]; then
  TAJO_PROXY_LOG_DIR="$TAJO_PROXY_HOME/logs"
fi
if [ "$TAJO_PROXY_LOGFILE" = "" ]; then
  TAJO_PROXY_LOGFILE='tajo-proxy.log'
fi

# figure out which class to run
if [ "$COMMAND" = "classpath" ] ; then
  if $cygwin; then
    CLASSPATH=`cygpath -p -w "$CLASSPATH"`
  fi
  echo $CLASSPATH
  exit
elif [ "$COMMAND" = "proxy" ] ; then
  CLASS='org.apache.tajo.proxy.TajoProxyServer'
  TAJO_PROXY_OPTS="$TAJO_PROXY_OPTS $JAVA_TAJO_PROXY__HEAP_MAX $TAJO_PROXY_OPTS"
elif [ "$COMMAND" = "proxy-shell" ] ; then
  CLASS='org.apache.tajo.proxy.TajoProxyShell'
  TAJO_PROXY_OPTS="$TAJO_PROXY_OPTS $JAVA_TAJO_PROXY__HEAP_MAX $TAJO_PROXY_OPTS"
elif [ "$COMMAND" = "cli" ] ; then
  CLASS='org.apache.tajo.proxy.cli.TajoProxyCli'
elif [ "$COMMAND" = "user" ] ; then
  CLASS='org.apache.tajo.proxy.ProxyUserAdmin'
else
  CLASS=$COMMAND
fi

HDFS_LIBRARY_PATH="${HADOOP_HOME}/lib/native/"
if [ "x$JAVA_LIBRARY_PATH" != "x" ]; then
    JAVA_LIBRARY_PATH=${JAVA_LIBRARY_PATH}:${HDFS_LIBRARY_PATH}
  else
    JAVA_LIBRARY_PATH=${HDFS_LIBRARY_PATH}
fi

TAJO_PROXY_OPTS="$TAJO_PROXY_OPTS -Dtajoproxy.log.dir=$TAJO_PROXY_LOG_DIR"
TAJO_PROXY_OPTS="$TAJO_PROXY_OPTS -Dtajoproxy.log.file=$TAJO_PROXY_LOGFILE"
TAJO_PROXY_OPTS="$TAJO_PROXY_OPTS -Dtajoproxy.home.dir=$TAJO_PROXY_HOME"
TAJO_PROXY_OPTS="$TAJO_PROXY_OPTS -Dtajoproxy.id.str=$TAJO_PROXY_IDENT_STRING"
TAJO_PROXY_OPTS="$TAJO_PROXY_OPTS -Dtajoproxy.root.logger=${TAJO_PROXY_ROOT_LOGGER:-INFO,console}"
if [ "x$JAVA_LIBRARY_PATH" != "x" ]; then
  TAJO_PROXY_OPTS="$TAJO_PROXY_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH"
fi  

# run it
export CLASSPATH=$CLASSPATH
exec "$JAVA" -Dproc_$COMMAND $TAJO_PROXY_OPTS $CLASS "$@"
